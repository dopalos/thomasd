name: release

on:
  push:
    tags: [ "v*" ]
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release (optional, e.g. v0.1.3)"
        required: false
        default: ""

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos:   [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag || github.ref }}
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true
      - name: Go mod download
        run: go mod tidy && go mod download
      - name: Build and package
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          REL="thomasd_${{ matrix.goos }}_${{ matrix.goarch }}"
          BIN="thomasd"
          [[ "${{ matrix.goos }}" == "windows" ]] && BIN="thomasd.exe"
          mkdir -p "dist/$REL"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=0 \
            go build -v -tags "cbor blake3" -o "dist/$REL/$BIN" ./cmd/thomasd
          pushd dist >/dev/null
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            zip -r "${REL}.zip" "$REL"
          else
            tar -czf "${REL}.tar.gz" "$REL"
          fi
          sha256sum "${REL}."* >> checksums.txt
          popd >/dev/null
      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            dist/*.zip
            dist/*.tar.gz
            dist/checksums.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Gather assets
        run: |
          mkdir -p upload
          find dist -type f \( -name '*.zip' -o -name '*.tar.gz' -o -name 'checksums.txt' \) -print0 | xargs -0 -I{} cp {} upload/
          ls -al upload
      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: ${{ github.event.inputs.tag || github.ref_name }}
          files: |
            upload/*.zip
            upload/*.tar.gz
            upload/checksums.txt
